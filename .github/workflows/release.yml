name: Release Extension

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.2.4

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Create extension package
      run: python scripts/package.py
        
    - name: Upload & Publish to Chrome Web Store
      # Only run if all required secrets are available (for maintainer's fork)
      if: env.CHROME_CLIENT_ID != '' && env.CHROME_CLIENT_SECRET != '' && env.CHROME_REFRESH_TOKEN != '' && env.CHROME_EXTENSION_ID != ''
      env:
        CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
        CHROME_CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
        CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
        CHROME_EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
      uses: mobilefirstllc/cws-publish@latest
      with:
        action: 'publish'  # upload, publish, or testers
        client_id: ${{ secrets.CHROME_CLIENT_ID }}
        client_secret: ${{ secrets.CHROME_CLIENT_SECRET }}
        refresh_token: ${{ secrets.CHROME_REFRESH_TOKEN }}
        extension_id: ${{ secrets.CHROME_EXTENSION_ID }}
        zip_file: 'omnisearch-extension-v*.zip'
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./extension.zip
        asset_name: omnisearch-extension-${{ github.ref_name }}.zip
        asset_content_type: application/zip 